package dictools.guessparadigm.paradigms;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;

/**
 * This class represents a set of surface forms generated by the concatenation
 * of a stem to a set of suffixes comming from a paradigm
 * @author Miquel Espl√† i Gomis
 */
public class SurfaceFormsSet {

    /** The stem of a set of words */
    String steam;

    /** The paradigm which contains the suffixes used to generate the surface forms */
    Paradigm paradigm;

    /** A set of surface forms and the corresponding score fro the inflection */
    Map<String,Double> surfaceforms;

    /**
     * Overloaded constructor of the class
     * @param steam The new stem for the class
     * @param paradigm The paradigm which contains the suffixes used to generate the surface forms
     * @param plf The set of lexical forms assigned to the paradigm in the dictionary
     */
    public SurfaceFormsSet(String steam, Paradigm paradigm, ParadigmRelatedWords plf){
        this.steam=steam;
        this.paradigm=paradigm;
        surfaceforms=new HashMap<String, Double>();
        //Surface forms are generated and the probability for each inflection is obtained
        for(Suffix s: paradigm.getSuffixes()){
            StringBuilder sb=new StringBuilder(steam);
            sb.append(s.getSuffix());
            surfaceforms.put(sb.toString(),plf.getAveragedProfile().get(s.getSuffix()));
        }
    }

    /**
     * Method that returns the value of {@link #paradigm}
     * @return Returns the value of {@link #paradigm}
     */
    public Paradigm getParadigm() {
        return paradigm;
    }

    /**
     * Method that returns the value of {@link #stem}
     * @return Returns the value of {@link #stem}
     */
    public String getSteam() {
        return steam;
    }

    /**
     * Method that returns the value of {@link #surfaceforms}
     * @return Returns the value of {@link #surfaceforms}
     */
    public Set<String> getSurfaceforms() {
        return surfaceforms.keySet();
    }

    /**
     * Method that returns the score of a concrete surface form
     * @param surfaceform Surface form for which the score should be returned
     * @return Returns the score of a concrete surface form
     */
    public double getSurfaceFormScore(String surfaceform){
        return this.surfaceforms.get(surfaceform);
    }
}
